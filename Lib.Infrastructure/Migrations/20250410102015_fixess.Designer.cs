// <auto-generated />
using System;
using Lib.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Lib.Infrastructure.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20250410102015_fixess")]
    partial class fixess
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Lib.Core.Entities.AuthorEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Authors", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d472"),
                            Birthday = new DateTime(1828, 9, 8, 20, 0, 0, 0, DateTimeKind.Utc),
                            Country = "Россия",
                            Name = "Лев",
                            Surname = "Толстой"
                        },
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d473"),
                            Birthday = new DateTime(1821, 11, 10, 21, 0, 0, 0, DateTimeKind.Utc),
                            Country = "Россия",
                            Name = "Фёдор",
                            Surname = "Достоевский"
                        },
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d474"),
                            Birthday = new DateTime(1860, 1, 28, 21, 0, 0, 0, DateTimeKind.Utc),
                            Country = "Россия",
                            Name = "Антон",
                            Surname = "Чехов"
                        },
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d475"),
                            Birthday = new DateTime(1799, 6, 5, 20, 0, 0, 0, DateTimeKind.Utc),
                            Country = "Россия",
                            Name = "Александр",
                            Surname = "Пушкин"
                        },
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d476"),
                            Birthday = new DateTime(1814, 10, 14, 20, 0, 0, 0, DateTimeKind.Utc),
                            Country = "Россия",
                            Name = "Михаил",
                            Surname = "Лермонтов"
                        });
                });

            modelBuilder.Entity("Lib.Core.Entities.BookEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("BorrowTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Genre")
                        .HasColumnType("integer");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ReturnTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("UserId");

                    b.ToTable("Books", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d477"),
                            AuthorId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d472"),
                            BorrowTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Роман-эпопея Льва Толстого",
                            Genre = 3,
                            ISBN = "978-5-17-090000-1",
                            ImagePath = "default_image.jpg",
                            Name = "Война и мир",
                            ReturnTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d478"),
                            AuthorId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d472"),
                            BorrowTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Роман Льва Толстого",
                            Genre = 0,
                            ISBN = "978-5-17-090000-2",
                            ImagePath = "default_image.jpg",
                            Name = "Анна Каренина",
                            ReturnTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d489"),
                            AuthorId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d472"),
                            BorrowTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Роман Льва Толстого",
                            Genre = 13,
                            ISBN = "978-5-17-090000-3",
                            ImagePath = "default_image.jpg",
                            Name = "Воскресение",
                            ReturnTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d481"),
                            AuthorId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d472"),
                            BorrowTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Повесть Льва Толстого",
                            Genre = 13,
                            ISBN = "978-5-17-090000-4",
                            ImagePath = "default_image.jpg",
                            Name = "Смерть Ивана Ильича",
                            ReturnTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d482"),
                            AuthorId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d473"),
                            BorrowTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Роман Фёдора Достоевского",
                            Genre = 6,
                            ISBN = "978-5-17-090000-5",
                            ImagePath = "default_image.jpg",
                            Name = "Преступление и наказание",
                            ReturnTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d483"),
                            AuthorId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d473"),
                            BorrowTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Роман Фёдора Достоевского",
                            Genre = 16,
                            ISBN = "978-5-17-090000-6",
                            ImagePath = "default_image.jpg",
                            Name = "Идиот",
                            ReturnTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d484"),
                            AuthorId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d473"),
                            BorrowTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Роман Фёдора Достоевского",
                            Genre = 1,
                            ISBN = "978-5-17-090000-7",
                            ImagePath = "default_image.jpg",
                            Name = "Братья Карамазовы",
                            ReturnTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d485"),
                            AuthorId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d473"),
                            BorrowTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Роман Фёдора Достоевского",
                            Genre = 3,
                            ISBN = "978-5-17-090000-8",
                            ImagePath = "default_image.jpg",
                            Name = "Бесы",
                            ReturnTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d486"),
                            AuthorId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d474"),
                            BorrowTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Пьеса Антона Чехова",
                            Genre = 11,
                            ISBN = "978-5-17-090000-9",
                            ImagePath = "default_image.jpg",
                            Name = "Вишнёвый сад",
                            ReturnTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d487"),
                            AuthorId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d474"),
                            BorrowTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Пьеса Антона Чехова",
                            Genre = 11,
                            ISBN = "978-5-17-090000-10",
                            ImagePath = "default_image.jpg",
                            Name = "Чайка",
                            ReturnTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d488"),
                            AuthorId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d474"),
                            BorrowTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Пьеса Антона Чехова",
                            Genre = 11,
                            ISBN = "978-5-17-090000-11",
                            ImagePath = "default_image.jpg",
                            Name = "Три сестры",
                            ReturnTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d189"),
                            AuthorId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d474"),
                            BorrowTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Пьеса Антона Чехова",
                            Genre = 11,
                            ISBN = "978-5-17-090000-12",
                            ImagePath = "default_image.jpg",
                            Name = "Дядя Ваня",
                            ReturnTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d181"),
                            AuthorId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d475"),
                            BorrowTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Роман в стихах Александра Пушкина",
                            Genre = 10,
                            ISBN = "978-5-17-090000-13",
                            ImagePath = "default_image.jpg",
                            Name = "Евгений Онегин",
                            ReturnTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d182"),
                            AuthorId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d475"),
                            BorrowTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Роман Александра Пушкина",
                            Genre = 11,
                            ISBN = "978-5-17-090000-14",
                            ImagePath = "default_image.jpg",
                            Name = "Капитанская дочка",
                            ReturnTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d183"),
                            AuthorId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d475"),
                            BorrowTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Повесть Александра Пушкина",
                            Genre = 10,
                            ISBN = "978-5-17-090000-15",
                            ImagePath = "default_image.jpg",
                            Name = "Пиковая дама",
                            ReturnTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d184"),
                            AuthorId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d475"),
                            BorrowTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Поэма Александра Пушкина",
                            Genre = 10,
                            ISBN = "978-5-17-090000-16",
                            ImagePath = "default_image.jpg",
                            Name = "Руслан и Людмила",
                            ReturnTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d185"),
                            AuthorId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d476"),
                            BorrowTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Роман Михаила Лермонтова",
                            Genre = 2,
                            ISBN = "978-5-17-090000-17",
                            ImagePath = "default_image.jpg",
                            Name = "Герой нашего времени",
                            ReturnTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d186"),
                            AuthorId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d476"),
                            BorrowTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Поэма Михаила Лермонтова",
                            Genre = 10,
                            ISBN = "978-5-17-090000-18",
                            ImagePath = "default_image.jpg",
                            Name = "Демон",
                            ReturnTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d187"),
                            AuthorId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d476"),
                            BorrowTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Поэма Михаила Лермонтова",
                            Genre = 10,
                            ISBN = "978-5-17-090000-19",
                            ImagePath = "default_image.jpg",
                            Name = "Мцыри",
                            ReturnTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d188"),
                            AuthorId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d476"),
                            BorrowTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Стихотворение Михаила Лермонтова",
                            Genre = 10,
                            ISBN = "978-5-17-090000-20",
                            ImagePath = "default_image.jpg",
                            Name = "Бородино",
                            ReturnTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("Lib.Core.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d479"),
                            Email = "admin@library.com",
                            Name = "Admin",
                            PasswordHash = "$2a$11$t9PVfLca4D1.dArfDxgAhOP/8sgjOpkPbdqO/nCvNiovdP8dOu3wG",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d471"),
                            Email = "user@library.com",
                            Name = "User",
                            PasswordHash = "$2a$11$/Hm.Ef6QWWSH.spPmrv8wOF84pOcIULA8srvm8jSGvXjoizkmd7tu",
                            Role = "User"
                        });
                });

            modelBuilder.Entity("Lib.Core.Entities.BookEntity", b =>
                {
                    b.HasOne("Lib.Core.Entities.AuthorEntity", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lib.Core.Entities.UserEntity", "User")
                        .WithMany("BorrowedBooks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Author");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Lib.Core.Entities.AuthorEntity", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Lib.Core.Entities.UserEntity", b =>
                {
                    b.Navigation("BorrowedBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
