version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: lib_postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 1111
      POSTGRES_DB: LibraryWeb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d LibraryWeb"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: lib_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --save 60 1 --loglevel warning

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: lib_backend
    ports:
      - "5000:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=LibraryWeb
      - DB_USER=admin
      - DB_PASSWORD=1111
      - ConnectionStrings__LibraryDbContext=Host=postgres;Port=5432;Database=LibraryWeb;Username=admin;Password=1111
      - ConnectionStrings__Redis=redis:6379
      - JwtOptions__SecretKey=SuperPuperSecretAmazinkKey123321
      - JwtOptions__Issuer=library-api
      - JwtOptions__Audience=library-client
      - JwtOptions__AccessTokenExpiryMinutes=60
      - JwtOptions__RefreshTokenExpiryDays=7
    volumes:
      - ./Lib.API/Uploads:/app/Uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: